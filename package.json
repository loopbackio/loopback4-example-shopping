{
  "name": "loopback4-example-shopping",
  "version": "1.0.0",
  "description": "LoopBack 4 Example: Online Shopping APIs",
  "keywords": [
    "loopback-application",
    "loopback"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=8"
  },
  "scripts": {
    "build:apidocs": "lb-apidocs",
    "build": "lb-tsc es2017 --outDir dist --copy-resources",
    "build:watch": "lb-tsc es2017 --outDir dist --watch",
    "clean": "lb-clean dist*",
    "commit": "git-cz",
    "commitmsg": "commitlint -E GIT_PARAMS",
    "docker:start": "./bin/start-dbs.sh",
    "docker:stop": "./bin/stop-dbs.sh",
    "lint": "npm run prettier:check && npm run tslint",
    "lint:fix": "npm run prettier:fix && npm run tslint:fix",
    "prettier:cli": "lb-prettier \"**/*.ts\" \"**/*.js\"",
    "prettier:check": "npm run prettier:cli -- -l",
    "prettier:fix": "npm run prettier:cli -- --write",
    "tslint": "lb-tslint",
    "tslint:fix": "npm run tslint -- --fix",
    "pretest": "npm run clean && npm run build && npm run docker:start",
    "pretest:ci": "npm run build",
    "test": "lb-mocha --allow-console-logs \"dist/test\"",
    "test:ci": "lb-mocha --allow-console-logs \"dist/test\"",
    "posttest": "npm run lint",
    "test:dev": "lb-mocha --allow-console-logs dist/test/**/*.js && npm run posttest",
    "prestart": "npm run build",
    "start": "concurrently --kill-others \"npm run start:app\" \"npm run start:recommender\"",
    "start:app": "node .",
    "start:recommender": "node recommender",
    "prepublishOnly": "npm run test"
  },
  "repository": {
    "type": "git"
  },
  "license": "MIT",
  "files": [
    "README.md",
    "index.js",
    "index.d.ts",
    "dist*/src",
    "dist*/index*",
    "src"
  ],
  "dependencies": {
    "@loopback/authentication": "^1.1.0",
    "@loopback/boot": "^1.1.3",
    "@loopback/context": "^1.9.0",
    "@loopback/core": "^1.3.0",
    "@loopback/openapi-v3": "^1.3.3",
    "@loopback/repository": "^1.3.0",
    "@loopback/rest": "^1.10.0",
    "@loopback/service-proxy": "^1.1.2",
    "@types/jsonwebtoken": "^8.3.2",
    "@types/passport": "^1.0.0",
    "bcryptjs": "^2.4.3",
    "debug": "^4.1.0",
    "express": "^4.16.4",
    "isemail": "^3.2.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.11",
    "loopback-connector-kv-redis": "^3.0.1",
    "loopback-connector-mongodb": "^3.9.2",
    "loopback-connector-rest": "^3.4.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^7.5.2",
    "@commitlint/config-conventional": "^7.5.0",
    "@commitlint/travis-cli": "^7.5.2",
    "@loopback/build": "^1.4.1",
    "@loopback/testlab": "^1.2.2",
    "@loopback/tslint-config": "^2.0.4",
    "@types/bcryptjs": "^2.4.2",
    "@types/debug": "^4.1.3",
    "@types/express": "^4.16.1",
    "@types/lodash": "^4.14.123",
    "@types/mocha": "^5.2.6",
    "@types/node": "^11.13.0",
    "commitizen": "^3.0.7",
    "concurrently": "^4.1.0",
    "cz-conventional-changelog": "^2.1.0",
    "husky": "^1.3.1",
    "mocha": "^6.0.2",
    "source-map-support": "^0.5.11",
    "tslint": "^5.15.0",
    "typescript": "^3.4.1"
  },
  "copyright.owner": "IBM Corp.",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "greenkeeper": {
    "commitMessages": {
      "initialBadge": "docs: add Greenkeeper badge",
      "initialDependencies": "chore: update dependencies",
      "initialBranches": "chore: whitelist greenkeeper branches",
      "dependencyUpdate": "chore: update ${dependency} to version ${version}",
      "devDependencyUpdate": "chore: update ${dependency} to version ${version}",
      "dependencyPin": "chore: pin ${dependency} to ${oldVersion}",
      "devDependencyPin": "chore: pin ${dependency} to ${oldVersion}",
      "lockfileUpdate": "chore: update lockfile ${lockfilePath}"
    },
    "prTitles": {
      "initialPR": "[greenkeeper] update dependencies to enable Greenkeeper",
      "initialPrBadge": "[greenkeeper] add badge to enable Greenkeeper",
      "initialPrBadgeOnly": "[greenkeeper] add Greenkeeper badge",
      "initialSubgroupPR": "[greenkeeper] update dependencies for ${group}",
      "basicPR": "[greenkeeper] update ${dependency} to the latest",
      "groupPR": "[greenkeeper] update ${dependency} in group ${group} to the latest"
    }
  }
}
